[tool.poetry]
name = "pydeck"
version = "0.1.0"
description = ""
authors = ["Vlad <89295404+Virashu@users.noreply.github.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
flask = "^3.0.0"
saaba = { git = "https://github.com/virashu/saaba" }
requests = "^2.31.0"
pydeck-shared = { git = "https://github.com/virashu/pydeck_shared" }


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
exclude = [
    "migrations",
    "__pycache__",
    "manage.py",
    "settings.py",
    "env",
    ".env",
    "venv",
    ".venv",
]

line-length = 88

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "W", # Warning
    "E", # Error

    "S",   # bandit
    "I",   # isort
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "F",   # pyflakes
    "N",   # pep8-naming
    "PGH", # pygrep-hooks
    "TRY", # tryceratops

    "YTT", # flake8-2020
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "Q",   # flake8-quotes
    "SIM", # flake8-simplify
    "PTH", # flake8-use-pathlib
]

ignore = [
    "B905",   # zip strict=True; remove once python <3.10 support is dropped.
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D400",
    "D415",
    "TRY003", # Avoid specifying messages outside exception class; overly strict, especially for ValueError
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.codespell]
skip = 'poetry.lock,'

[tool.pyright]
venvPath = "."
venv = ".venv"
